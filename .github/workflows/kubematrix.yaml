name: Matrix workflow
on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master
jobs:
  test:
    name: Test Kubernetes Versions
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        # Version listings can be found here:
        # https://github.com/kubernetes-sigs/kind/releases
        node:
          - v1.18.2
          - v1.17.5
          - v1.16.9
          - v1.15.11
          - v1.14.10
          #- v1.13.12
          #- v1.12.10
          #- v1.11.10
        controller-gen:
          - v0.3.0
          - v0.2.9
          - v0.2.8
          #- v0.2.7
          #- v0.2.6
          #- v0.2.5
          #- v0.2.4
          #- v0.2.3
          - v0.2.2
        controller-runtime:
          - v0.6.2
          #- v0.6.1
          - v0.6.0
          - v0.5.9
          #- v0.5.8
          #- v0.5.7
          #- v0.5.6
          #- v0.5.5
          #- v0.5.4
          #- v0.5.3
          #- v0.5.2
          #- v0.5.1
          - v0.5.0
          - v0.4.0
          - v0.3.0
          #- v0.2.2
          #- v0.2.1
          #- v0.2.0
    steps:
      - name: Check out code
        uses: actions/checkout@v2
      - name: KinD (Kubernetes in Docker) Initialization
        uses: helm/kind-action@v1.0.0-rc.1
        with:
          version: v0.8.1
          node_image: kindest/node:${{ matrix.node }}
          wait: 0s
      - name: Build controller
        run: |
          go get sigs.k8s.io/controller-tools/cmd/controller-gen@${{ matrix.controller-gen }}
          go get sigs.k8s.io/controller-runtime@${{ matrix.controller-runtime }}
          make manifests
          make docker-build
      - name: Deploy controller
        run: |
          kind load docker-image controller:latest --name chart-testing
          curl -s "https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"  | \
          bash
          [[ ! -f /usr/local/bin/kustomize ]] && sudo mv ./kustomize /usr/local/bin/kustomize
          make deploy
      - name: e2e
        run: |
          kubectl apply -f config/samples/batch_v1_cronjob.yaml
          sleep 60
          kubectl wait --for condition=complete job --all --timeout 60s
          kubectl get job -o wide
      - name: The job has failed
        if: ${{ failure() }}
        run: |
          kubectl get cronjobs.batch.tutorial.kubebuilder.io,job,pod -o wide
          kubectl get pod -o wide -n project-system
      #- name: Setup tmate session
      #  if: ${{ failure() }}
      #  uses: mxschmitt/action-tmate@v2
